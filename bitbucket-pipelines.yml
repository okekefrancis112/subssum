
# PIPELINE

image: node:latest

# clone:
#   depth: full              # SonarCloud scanner needs the full history to assign issues properly

# definitions:
#   caches:
#     sonar: ~/.sonar/cache  # Caching SonarCloud artifacts will speed up your build
#   steps:
#   - step: &build-test-sonarcloud
#       name: Build, test and analyze on SonarCloud
#       caches:
#         - ************************** # See
#         https://confluence.atlassian.com/bitbucket/caching-dependencies-895552876.html

#         - sonar
#       script:
#         - npm install
#         - npm run bitbucket:build # Build your project and run
#         - pipe: sonarsource/sonarcloud-scan:2.0.0
#   - step: &check-quality-gate-sonarcloud
#       name: Check the Quality Gate on SonarCloud
#       script:
#         - pipe: sonarsource/sonarcloud-quality-gate:0.1.6



pipelines:
  branches:
    dev:
      # - step: *build-test-sonarcloud
      # - step: *check-quality-gate-sonarcloud
      - step:
          name: Building the app
          script:
            - npm install
            - npm run bitbucket:build
          artifacts:
            - build/**
      - step:
          name: Deploying to Staging
          deployment: Staging
          script:
            - apt-get update -qy
            - apt-get install -qy sshpass

            - scp -i "$STAGING_PRIVATE_KEY" -o StrictHostKeyChecking=no -r * $EC2_USER@$EC2_IP:/home/$EC2_USER/kebleStage
            # - ssh -i "$STAGING_PRIVATE_KEY" -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP "sudo chown -R $EC2_USER:$EC2_USER /home/$EC2_USER/kebleStage"
            - ssh -i "$STAGING_PRIVATE_KEY" -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP "cd kebleStage && npm install && pm2 restart all --silent"